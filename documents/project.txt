プロジェクトノート

[目的]
	Parallelized Template手法を確立する（主にIRからのテンプレートマッチングと
	それによる速度向上)

[実装言語]
	MinPy(Minimized-Python):
		class:なし
		変数:NumberとString,及びListのみ
		関数: defのみサポート。ファンクタとして用いることで
					関数変数として使えるようにする
		組み込み関数: mapとfilterを実装し、ここを並列化の肝としたい
		
[構成]
	C++ & LLVM & Python-C APIを用いる。
	スタートアップでPython-Cのcompilerモジュールを用いてASTを生産。
	（インタプリタ実行そのものなのでこれによって実行が
	従来手法より遅くなることはない）
	そしてそのASTを基にしてLLVMーIRを生成。Optした後に
	そこからテンプレートマッチングを行う。
	そこでひっかかった箇所をLLVMーIRの関数呼び出しめ異例に置き換える。

	利用するすべての変数は（インタプリタレベルでの）
	グローバルな空間に置いておき、Parallelized Primitiveの仕組みを遵守する。
	(その為にグローバルなKey-Valueストアを用意しておく）


